name: SerenityAI CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        cd ../mobile && npm ci --legacy-peer-deps
      
    - name: Run linter
      run: |
        npm run lint:fix
        npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build

  mobile-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Install dependencies
      run: |
        npm ci
        cd mobile && npm ci --legacy-peer-deps
        
    - name: Install Expo CLI
      run: npm install -g @expo/cli
        
    - name: Build Mobile App
      run: |
        cd mobile
        npx expo export --platform web
      continue-on-error: true
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mobile-build
        path: mobile/dist/
      if: success()

  backend-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        
    - name: Build backend
      run: cd backend && npm run build
      continue-on-error: true
      
    - name: Deploy to staging
      run: echo "Deploy to staging server"
      # Add your deployment commands here
      
  ai-services-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd ai-services
        pip install -r requirements.txt
        
    - name: Run Python tests
      run: |
        cd ai-services
        python -m pytest tests/ -v --tb=short
        
    - name: Run validation script
      run: |
        cd ai-services
        python validate_services.py
        
    - name: Run AI model validation
      run: |
        cd ai-services
        python -m pytest tests/test_models.py -v --tb=short
      continue-on-error: true  # Don't fail pipeline if AI models have issues

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Dependency vulnerability scan
      uses: actions/dependency-review-action@v3
      if: github.event_name == 'pull_request'
